{"version":3,"sources":["app/phoenix.js","app/socket.js","app/app.js"],"names":[],"mappings":"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","file":"../web/static/assets/js/remarksync.js","sourcesContent":["// Phoenix Channels JavaScript client\n//\n// ## Socket Connection\n//\n// A single connection is established to the server and\n// channels are mulitplexed over the connection.\n// Connect to the server using the `Socket` class:\n//\n//     let socket = new Socket(\"/ws\", {params: {userToken: \"123\"}})\n//     socket.connect()\n//\n// The `Socket` constructor takes the mount point of the socket,\n// the authentication params, as well as options that can be found in\n// the Socket docs, such as configuring the `LongPoll` transport, and\n// heartbeat.\n//\n// ## Channels\n//\n// Channels are isolated, concurrent processes on the server that\n// subscribe to topics and broker events between the client and server.\n// To join a channel, you must provide the topic, and channel params for\n// authorization. Here's an example chat room example where `\"new_msg\"`\n// events are listened for, messages are pushed to the server, and\n// the channel is joined with ok/error/timeout matches:\n//\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n//     $input.onEnter( e => {\n//       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n//        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n//     })\n//     channel.join()\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n//       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n//\n//\n// ## Joining\n//\n// Creating a channel with `socket.channel(topic, params)`, binds the params to\n// `channel.params`, which are sent up on `channel.join()`.\n// Subsequent rejoins will send up the modified params for\n// updating authorization params, or passing up last_message_id information.\n// Successful joins receive an \"ok\" status, while unsuccessful joins\n// receive \"error\".\n//\n//\n// ## Pushing Messages\n//\n// From the previous example, we can see that pushing messages to the server\n// can be done with `channel.push(eventName, payload)` and we can optionally\n// receive responses from the push. Additionally, we can use\n// `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n//  and take action after some period of waiting. The default timeout is 5000ms.\n//\n//\n// ## Socket Hooks\n//\n// Lifecycle events of the multiplexed connection can be hooked into via\n// `socket.onError()` and `socket.onClose()` events, ie:\n//\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\n//     socket.onClose( () => console.log(\"the connection dropped\") )\n//\n//\n// ## Channel Hooks\n//\n// For each joined channel, you can bind to `onError` and `onClose` events\n// to monitor the channel lifecycle, ie:\n//\n//     channel.onError( () => console.log(\"there was an error!\") )\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n//\n// ### onError hooks\n//\n// `onError` hooks are invoked if the socket connection drops, or the channel\n// crashes on the server. In either case, a channel rejoin is attemtped\n// automatically in an exponential backoff manner.\n//\n// ### onClose hooks\n//\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n// closed on the server, or 2). The client explicitly closed, by calling\n// `channel.leave()`\n//\n\nconst VSN = \"1.0.0\"\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nconst DEFAULT_TIMEOUT = 10000\nconst CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n}\nconst CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\nconst TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\n\nclass Push {\n\n  // Initializes the Push\n  //\n  // channel - The Channel\n  // event - The event, for example `\"phx_join\"`\n  // payload - The payload, for example `{user_id: 123}`\n  // timeout - The push timeout in milliseconds\n  //\n  constructor(channel, event, payload, timeout){\n    this.channel      = channel\n    this.event        = event\n    this.payload      = payload || {}\n    this.receivedResp = null\n    this.timeout      = timeout\n    this.timeoutTimer = null\n    this.recHooks     = []\n    this.sent         = false\n  }\n\n  resend(timeout){\n    this.timeout = timeout\n    this.cancelRefEvent()\n    this.ref          = null\n    this.refEvent     = null\n    this.receivedResp = null\n    this.sent         = false\n    this.send()\n  }\n\n  send(){ if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref\n    })\n  }\n\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n\n  // private\n\n  matchReceive({status, response, ref}){\n    this.recHooks.filter( h => h.status === status )\n                 .forEach( h => h.callback(response) )\n  }\n\n  cancelRefEvent(){ if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  startTimeout(){ if(this.timeoutTimer){ return }\n    this.ref      = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n\nclass Channel {\n  constructor(topic, params, socket) {\n    this.state       = CHANNEL_STATES.closed\n    this.topic       = topic\n    this.params      = params || {}\n    this.socket      = socket\n    this.bindings    = []\n    this.timeout     = this.socket.timeout\n    this.joinedOnce  = false\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer  = []\n    this.rejoinTimer  = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach( pushEvent => pushEvent.send() )\n      this.pushBuffer = []\n    })\n    this.onClose( () => {\n      this.socket.log(\"channel\", `close ${this.topic}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError( reason => {\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.state !== CHANNEL_STATES.joining){ return }\n\n      this.socket.log(\"channel\", `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected(){\n    this.rejoinTimer.scheduleTimeout()\n    if(this.socket.isConnected()){\n      this.rejoin()\n    }\n  }\n\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\n    } else {\n      this.joinedOnce = true\n    }\n    this.rejoin(timeout)\n    return this.joinPush\n  }\n\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\n\n  onError(callback){\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\n  }\n\n  on(event, callback){ this.bindings.push({event, callback}) }\n\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\n\n  canPush(){ return this.socket.isConnected() && this.state === CHANNEL_STATES.joined }\n\n  push(event, payload, timeout = this.timeout){\n    if(!this.joinedOnce){\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  // Leaves the channel\n  //\n  // Unsubscribes from server events, and\n  // instructs channel to terminate on server\n  //\n  // Triggers onClose() hooks\n  //\n  // To receive leave acknowledgements, use the a `receive`\n  // hook to bind to the server ack, ie:\n  //\n  //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n  //\n  leave(timeout = this.timeout){\n    let onClose = () => {\n      this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive(\"ok\", () => onClose() )\n             .receive(\"timeout\", () => onClose() )\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  // Overridable message hook\n  //\n  // Receives all events for specialized message handling\n  onMessage(event, payload, ref){}\n\n  // private\n\n  isMember(topic){ return this.topic === topic }\n\n  sendJoin(timeout){\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  rejoin(timeout = this.timeout){ this.sendJoin(timeout) }\n\n  trigger(triggerEvent, payload, ref){\n    this.onMessage(triggerEvent, payload, ref)\n    this.bindings.filter( bind => bind.event === triggerEvent )\n                 .map( bind => bind.callback(payload, ref) )\n  }\n\n  replyEventName(ref){ return `chan_reply_${ref}` }\n}\n\nclass Socket {\n\n  // Initializes the Socket\n  //\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\n  //                                               \"wss://example.com\"\n  //                                               \"/ws\" (inherited host & protocol)\n  // opts - Optional configuration\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n  //               Defaults to WebSocket with automatic LongPoll fallback.\n  //   timeout - The default timeout in milliseconds to trigger push timeouts.\n  //             Defaults `DEFAULT_TIMEOUT`\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\n  //   reconnectAfterMs - The optional function that returns the millsec\n  //                      reconnect interval. Defaults to stepped backoff of:\n  //\n  //     function(tries){\n  //       return [1000, 5000, 10000][tries - 1] || 10000\n  //     }\n  //\n  //   logger - The optional function for specialized logging, ie:\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n  //\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\n  //                        Defaults to 20s (double the server long poll timer).\n  //\n  //   params - The optional params to pass when connecting\n  //\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n  //\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels             = []\n    this.sendBuffer           = []\n    this.ref                  = 0\n    this.timeout              = opts.timeout || DEFAULT_TIMEOUT\n    this.transport            = opts.transport || window.WebSocket || LongPoll\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000\n    }\n    this.logger               = opts.logger || function(){} // noop\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\n    this.params               = opts.params || {}\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\n    this.reconnectTimer       = new Timer(() => {\n      this.disconnect(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params), {vsn: VSN})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  disconnect(callback, code, reason){\n    if(this.conn){\n      this.conn.onclose = function(){} // noop\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      this.conn = null\n    }\n    callback && callback()\n  }\n\n  // params - The params to send when connecting, for example `{user_id: userToken}`\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = params\n    }\n    if(this.conn){ return }\n\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.timeout   = this.longpollerTimeout\n    this.conn.onopen    = () => this.onConnOpen()\n    this.conn.onerror   = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose   = event => this.onConnClose(event)\n  }\n\n  // Logs the message. Override `this.logger` for specialized logging. noops by default\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  // Registers callbacks for connection state change events\n  //\n  // Examples\n  //\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\n  //\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\n\n  onConnOpen(){\n    this.log(\"transport\", `connected to ${this.endPointURL()}`, this.transport.prototype)\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    if(!this.conn.skipHeartbeat){\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n    }\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\n  }\n\n  onConnClose(event){\n    this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\n  }\n\n  onConnError(error){\n    this.log(\"transport\", error)\n    this.triggerChanError()\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\n  }\n\n  triggerChanError(){\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\n  }\n\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open:       return \"open\"\n      case SOCKET_STATES.closing:    return \"closing\"\n      default:                       return \"closed\"\n    }\n  }\n\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  remove(channel){\n    this.channels = this.channels.filter( c => !c.isMember(channel.topic) )\n  }\n\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data){\n    let {topic, event, payload, ref} = data\n    let callback = () => this.conn.send(JSON.stringify(data))\n    this.log(\"push\", `${topic} ${event} (${ref})`, payload)\n    if(this.isConnected()){\n      callback()\n    }\n    else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  // Return the next message ref, accounting for overflows\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){ if(!this.isConnected()){ return }\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef()})\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach( callback => callback() )\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    let msg = JSON.parse(rawMessage.data)\n    let {topic, event, payload, ref} = msg\n    this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n    this.channels.filter( channel => channel.isMember(topic) )\n                 .forEach( channel => channel.trigger(event, payload, ref) )\n    this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\n  }\n}\n\n\nclass LongPoll {\n\n  constructor(endPoint){\n    this.endPoint        = null\n    this.token           = null\n    this.skipHeartbeat   = true\n    this.onopen          = function(){} // noop\n    this.onerror         = function(){} // noop\n    this.onmessage       = function(){} // noop\n    this.onclose         = function(){} // noop\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\n    this.readyState      = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return(endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else{\n        var status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach( msg => this.onmessage({data: JSON.stringify(msg)}) )\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(code, reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n\n\nclass Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(window.XDomainRequest){\n      let req = new XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = window.XMLHttpRequest ?\n                  new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint, true)\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === this.states.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    return (resp && resp !== \"\") ?\n             JSON.parse(resp) :\n             null\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = [];\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n\nAjax.states = {complete: 4}\n\n\n// Creates a timer that accepts a `timerCalc` function to perform\n// calculated timeout retries, such as exponential backoff.\n//\n// ## Examples\n//\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n//      return [1000, 5000, 10000][tries - 1] || 10000\n//    })\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//    reconnectTimer.scheduleTimeout() // fires after 5000\n//    reconnectTimer.reset()\n//    reconnectTimer.scheduleTimeout() // fires after 1000\n//\nclass Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"web/static/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/my_app/endpoint.ex\":\n\n//import {Socket} from \"phoenix\"\n\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\n// LICENSE DISCLAIMER FOR MURMURHASH:\n// License (MIT)\n// Copyright (c) 2011 Gary Court\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n * \n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n * \n * @param {string} key ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash \n */\n\nfunction murmurhash3_32_gc(key, seed) {\n\tvar remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\t\n\tremainder = key.length & 3; // key.length % 4\n\tbytes = key.length - remainder;\n\th1 = seed;\n\tc1 = 0xcc9e2d51;\n\tc2 = 0x1b873593;\n\ti = 0;\n\t\n\twhile (i < bytes) {\n\t  \tk1 = \n\t  \t  ((key.charCodeAt(i) & 0xff)) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 8) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 16) |\n\t  \t  ((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\t\t\n\t\tk1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n\t\th1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n\t\th1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n\t\th1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n\t}\n\t\n\tk1 = 0;\n\t\n\tswitch (remainder) {\n\t\tcase 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\t\tcase 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\t\tcase 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\t\t\n\t\tk1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 ^= k1;\n\t}\n\t\n\th1 ^= key.length;\n\n\th1 ^= h1 >>> 16;\n\th1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nlet state = {state: null, count: 0};\n\nclass StateSync {\n\tconstructor() {\n\t\tthis.socket = new Socket(\"ws://localhost:4000/socket\", {params: {token: window.userToken}});\n\t\tthis.counter = 0;\n\t}\n\t\n\tstart(state) {\n\t\tvar self = this;\n\n\t\tthis.socket.connect()\n\n\t\tthis.channel = this.socket.channel(\"slideshow:\" + this.id, {state: state, counter: this.counter});\n\n\t\tthis.channel.join()\n\t\t  .receive(\"ok\", resp => { \n\t\t  \tconsole.log(\"Joined successfully\", resp);\n\n\t\t  \tif (typeof this.cb === \"function\")\n\t\t  \t\tthis.cb(resp.state);\n\n\t\t\tself.counter = resp.counter;\n\t\t  \tself.started = true;\n\t\t  })\n\t\t  .receive(\"error\", resp => { console.log(\"Unable to join\", resp) })\n\t\tthis.channel.on(\"changed\", payload => {\n\t\t\tconsole.log(\"changed: \", payload);\n\n\t\t\tconsole.log(\"self.started\",self.started);\n\t\t\tconsole.log(\"self.counter\", self.counter);\n\t\t\tconsole.log(\"payload.counter\", payload.counter);\n\t\t\tif (self.started && self.counter < payload.counter){\n\t\t\t\tself.counter = payload.counter || 0;\n\t\t\t\tthis.cb(payload.state);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"ignored, it's ours\");\n\t\t\t}\n\t\t});\n\t}\n\n\tpush(state) {\n\t\tif (!this.started) return;\n\n\t\tthis.counter++;\n\t\tthis.channel.push(\"change\", {state: state, counter: this.counter});\n\t}\n\n\tget id() {\n\t\treturn murmurhash3_32_gc(window.location.toString().replace(/[\\?#].*/,''), 1);\n\t}\n\n\tlisten(cb) {\n\t\tthis.cb = cb;\n\t}\n}\n\nlet stateSync = new StateSync();\n\nexport default stateSync","// Brunch automatically concatenates all files in your\n// watched paths. Those paths can be configured at\n// config.paths.watched in \"brunch-config.js\".\n//\n// However, those files will only be executed if\n// explicitly imported. The only exception are files\n// in vendor, which are never wrapped in imports and\n// therefore are always executed.\n\n// Import dependencies\n//\n// If you no longer want to use a dependency, remember\n// to also remove its path from \"config.paths.watched\".\n// import \"phoenix_html\"\n\n// Import local files\n//\n// Local files can be imported directly using relative\n// paths \"./socket\" or full ones \"web/static/js/socket\".\n\n//import stateSync from \"./socket\"\n//var stateSync = Socket;\n\nclass SlideSync {\n\tconstructor(stateSync, slideshow){\n\t\tthis.slideshow = slideshow;\n\n\t\tstateSync.start(this.page);\n\t\tstateSync.listen((p) => {this.setPage(p)});\n\n\t\tthis.monkeyPatchReplaceState();\n\n\t\t// Use it like this:\n\t\t// let self = this;\n\t\twindow.addEventListener('replaceState', e => {\n\t\t\tif (this.fromStateSync)\n\t\t\t\tthis.fromStateSync = false;\n\t\t\telse\n\t\t    \tstateSync.push(this.page);\n\t\t});\n\t}\n\n\tget page(){\n\t\treturn window.location.hash.replace(/#p?/,'')\n\t}\n\n\tget presenter(){\n\t\treturn window.location.hash.indexOf('#p') == 0;\n\t}\n\n\tsetPage(p){\n\t\t//let hash = this.presenter ? '#p' + p : '#' + p;\n\n\t\tthis.fromStateSync = true;\n\t\tthis.slideshow.gotoSlide(p-0);\n\t\t//window.history.replaceState(undefined, undefined, hash);\n\t}\n\n\tmonkeyPatchReplaceState(){\n\t\tlet _wr = function(type) {\n\t\t    let orig = history[type];\n\t\t    return function() {\n\t\t        let rv = orig.apply(this, arguments);\n\t\t        let e = new Event(type);\n\t\t        e.arguments = arguments;\n\t\t        window.dispatchEvent(e);\n\t\t        return rv;\n\t\t    };\n\t\t};\n\t\thistory.pushState = _wr('pushState'), history.replaceState = _wr('replaceState');\n\t}\n}\n\nwindow.slidesync = new SlideSync(stateSync, window.slideshow);"]}